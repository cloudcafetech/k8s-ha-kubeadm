apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: haproxy-ingress
    app.kubernetes.io/name: haproxy-ingress
  name: haproxy-ingress
  namespace: kube-router
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: haproxy-ingress
      app.kubernetes.io/name: haproxy-ingress
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: haproxy-ingress
        app.kubernetes.io/name: haproxy-ingress
    spec:
      containers:
      - args:
        - --configmap=kube-router/haproxy-ingress
        - --ingress-class=haproxy
        - --sort-backends
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/jcmoraisjr/haproxy-ingress:v0.13.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10253
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: haproxy-ingress
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          name: https
          protocol: TCP
        - containerPort: 10253
          hostPort: 10253
          name: healthz
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10253
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        region: infra
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: haproxy-ingress
      serviceAccountName: haproxy-ingress
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: haproxy-ingress
    app.kubernetes.io/name: haproxy-ingress
  name: haproxy-ingress
  namespace: kube-router
spec:
  type: NodePort
  ports:
  - name: http-80
    port: 80
    protocol: TCP
    targetPort: http
  - name: https-443
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/instance: haproxy-ingress
    app.kubernetes.io/name: haproxy-ingress
